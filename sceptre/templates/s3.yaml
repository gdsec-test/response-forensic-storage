AWSTemplateFormatVersion: 2010-09-09
Description: Bucket where SIR will create folders for incident evidence
Parameters:
  ServiceCatalogVersion:
    Type: String
    Description: Service Catalog version for S3
  BucketNameSuffix:
    Type: String
    MinLength: 1
    AllowedPattern: "[a-z][a-z0-9-]+[a-z0-9]"
    Description: Unique naming suffix for bucket
  BucketPolicy:
    Type: String
    Description: Bucket ACL to set
    Default: Private
    AllowedValues:
      - Private
      - LogDeliveryWrite
      - AwsExecRead
      - BucketOwnerRead
      - BucketOwnerFullControl
      - PublicRead
      - AuthenticatedRead
  ReadOnlyRoles:
    Type: CommaDelimitedList
    Description: (Optional) List of IAM roles that will have read-only access to the S3 bucket. This will be ignored if CustomBucketPolicyJSON is specified.
    Default: ""
  ReadWriteRoles:
    Type: CommaDelimitedList
    Description: (Optional) List of IAM roles that will have read-write access to the S3 bucket. This will be ignored if CustomBucketPolicyJSON is specified.
    Default: ""
  ReadWriteDeleteRoles:
    Type: CommaDelimitedList
    Description: (Optional) List of IAM roles that will have read-write-delete access to the S3 bucket. This will be ignored if CustomBucketPolicyJSON is specified.
    Default: ""
  VersioningStatus:
    Type: String
    Description: Versioning should be enabled unless there is good reason not to.
    Default: Enabled
    AllowedValues:
      - Enabled
      - Suspended
      - Disabled
  ExpirationDays:
    Type: Number
    Description: (optional) Days before expiring object. Set to -1 to never expire.
    Default: -1
    AllowedValues:
      - -1
      - 7
      - 14
      - 30
      - 60
      - 90
      - 180
      - 365
      - 1096
      - 1460
      - 2557
  OldVersionExpirationDays:
    Type: Number
    Description: (optional) Days before expiring outdated object versions. Set to -1 to never expire.
    Default: 180
    AllowedValues:
      - -1
      - 7
      - 14
      - 30
      - 60
      - 90
      - 180
      - 365
      - 1096
      - 1460
      - 2557
  ReplicationBucketName:
    Type: String
    Description: (optional) The name of the replication bucket. If replication configuration needs to be enabled, please create a bucket (with versioning enabled) in another region beforehand.
    Default: ""
    MaxLength: 63
  PrefixForReplication:
    Type: String
    Description: (optional) An object prefix. This rule applies to all Amazon S3 objects with this prefix. To specify all objects in an S3 bucket, specify an empty string.
    Default: ""
  DestinationAccountId:
    Type: String
    Description: (optional) The destination account id of the replica bucket. Replicate only to different environments.
    Default: ""
  DevelopmentTeam:
    Type: AWS::SSM::Parameter::Value<String>
    Description: SSM Parameter for team owning the created resources.
    Default: /AdminParams/Team/Name
    AllowedValues:
      - /AdminParams/Team/Name
  DevelopmentEnvironment:
    Type: AWS::SSM::Parameter::Value<String>
    Description: SSM Parameter for development environment this will live in.
    Default: /AdminParams/Team/Environment
    AllowedValues:
      - /AdminParams/Team/Environment
  OrgType:
    Type: AWS::SSM::Parameter::Value<String>
    Description: Business Unit of the Account.
    Default: /AdminParams/Team/OrgType
    AllowedValues:
      - /AdminParams/Team/OrgType
  EnvMode:
    Type: AWS::SSM::Parameter::Value<String>
    Description: SSM Parameter for development mode of the account.
    Default: /AdminParams/Team/EnvMode
    AllowedValues:
      - /AdminParams/Team/EnvMode
  AccessLogsBucket:
    Type: AWS::SSM::Parameter::Value<String>
    Description: Access logs S3 bucket.
    Default: /AdminParams/BaselineBucketNames/LOBAccessLogsBucket
    AllowedValues:
      - /AdminParams/BaselineBucketNames/LOBAccessLogsBucket
  EnableBucketMetrics:
    Type: String
    Description: Enable all available bucket metrics.
    Default: false
    AllowedValues:
      - true
      - false
Mappings:
  Organizations:
    non-pci:
      prod: o-nkgi7akmvi
      dev: o-by05f6zmn4
    pci:
      prod: o-1xnd0t0rwa
    hackathon:
      prod: o-5tjjsp4k13
    registry:
      prod: o-pn5n9kd1l3
Conditions:
  UsingExpiration: !Not [ !Equals [ !Ref ExpirationDays, -1 ] ]
  UsingOldVersionExpiration: !Not [ !Equals [ !Ref OldVersionExpirationDays, -1 ] ]
  IsPCI: !Equals [ !Ref OrgType, pci ]
  UseReadOnlyRoles: !Not [ !Equals [ !Join [ ",", !Ref ReadOnlyRoles ], "" ] ]
  UseReadWriteRoles: !Not [ !Equals [ !Join [ ",", !Ref ReadWriteRoles ], "" ] ]
  UseReadWriteDeleteRoles: !Not [ !Equals [ !Join [ ",", !Ref ReadWriteDeleteRoles ], "" ] ]
  NeedsCustomBucketPolicy: !Or
    - !Condition UseReadOnlyRoles
    - !Condition UseReadWriteRoles
    - !Condition UseReadWriteDeleteRoles
  IsPublic: !And
    - !Not [ !Condition IsPCI ]
    - !Or
      - !Equals [ !Ref BucketPolicy, AuthenticatedRead ]
      - !Equals [ !Ref BucketPolicy, PublicRead ]
  EnableMetrics: !Equals [ !Ref EnableBucketMetrics, true ]
  EnableVersioning: !Not [ !Equals [ !Ref VersioningStatus, "Disabled"] ]
Resources:
  S3Bucket:
    Type: AWS::ServiceCatalog::CloudFormationProvisionedProduct
    Properties:
      ProductName: S3
      ProvisioningArtifactName: !Ref ServiceCatalogVersion
      ProvisionedProductName:
        Fn::Sub: "${BucketNameSuffix}-s3"
      AccessControl: !Ref BucketPolicy
      BucketName: !Sub gd-${DevelopmentTeam}-${DevelopmentEnvironment}-${BucketNameSuffix}
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      LoggingConfiguration:
        DestinationBucketName: !Ref AccessLogsBucket
        LogFilePrefix: !Sub s3/gd-${DevelopmentTeam}-${DevelopmentEnvironment}-${BucketNameSuffix}
      VersioningConfiguration: !If
        - EnableVersioning
        - Status: !Ref VersioningStatus
        - !Ref AWS::NoValue
      MetricsConfigurations:
        - !If
          - EnableMetrics
          - Id: EntireBucket
          - !Ref "AWS::NoValue"
      Tags:
        - Key: Name
          Value: !Sub gd-${DevelopmentTeam}-${DevelopmentEnvironment}-${BucketNameSuffix}
        - Key: ResourceType
          Value: S3
  CustomBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Condition: NeedsCustomBucketPolicy
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        - Version: 2012-10-17
          Statement:
            - !If
              - UseReadOnlyRoles
              - Effect: Allow
                Action:
                  - s3:Get*
                  - s3:List*
                Resource:
                  - !GetAtt S3Bucket.Arn
                  - !Sub ${S3Bucket.Arn}/*
                Principal:
                  AWS: "*"
                Condition:
                  ArnEquals:
                    aws:PrincipalArn: !Ref ReadOnlyRoles
                  StringEquals:
                    aws:PrincipalOrgID: !FindInMap [ Organizations, !Ref OrgType, !Ref EnvMode ]
              - !Ref AWS::NoValue
            - !If
              - UseReadWriteRoles
              - Effect: Allow
                Action:
                  - s3:Get*
                  - s3:List*
                  - s3:PutObject*
                  - s3:AbortMultipartUpload
                Resource:
                  - !GetAtt S3Bucket.Arn
                  - !Sub ${S3Bucket.Arn}/*
                Principal:
                  AWS: "*"
                Condition:
                  ArnEquals:
                    aws:PrincipalArn: !Ref ReadWriteRoles
                  StringEquals:
                    aws:PrincipalOrgID: !FindInMap [ Organizations, !Ref OrgType, !Ref EnvMode ]
              - !Ref AWS::NoValue
            - !If
              - UseReadWriteDeleteRoles
              - Effect: Allow
                Action:
                  - s3:Get*
                  - s3:List*
                  - s3:PutObject*
                  - s3:AbortMultipartUpload
                  - s3:DeleteObject*
                Resource:
                  - !GetAtt S3Bucket.Arn
                  - !Sub ${S3Bucket.Arn}/*
                Principal:
                  AWS: "*"
                Condition:
                  ArnEquals:
                    aws:PrincipalArn: !Ref ReadWriteDeleteRoles
                  StringEquals:
                    aws:PrincipalOrgID: !FindInMap [ Organizations, !Ref OrgType, !Ref EnvMode ]
              - !Ref AWS::NoValue
    DependsOn:
      - S3Bucket
Outputs:
  BucketName:
    Description: Name of created S3 Bucket
    Value: !Ref S3Bucket
